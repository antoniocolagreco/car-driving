---
import type { HTMLAttributes } from 'astro/types'
import Button from '../components/button.astro'
import Input from '../components/input.astro'
import Range from '../components/range.astro'
import DefaultLayout from '../layouts/default-layout.astro'

type Props = HTMLAttributes<'div'>
const { class: className, ...otherProps } = Astro.props
---

<script>
    import { createSimulation } from '../libs/self-driving-car'
    let sim: { destroy: () => void } | null = null
    const boot = () => {
        const drive = document.querySelector('#drive') as HTMLElement | null
        if (!drive) return
        sim?.destroy?.()
        sim = createSimulation(drive)
    }
    document.addEventListener('astro:page-load', boot)
    document.addEventListener('astro:before-swap', () => sim?.destroy?.())
    window.addEventListener('pagehide', () => sim?.destroy?.())
</script>

<DefaultLayout title="Self Driving Car">
    <div class="h-full flex flex-col grow">
        <nav class="flex gap-4 mb-2 w-full flex-wrap justify-between">
            <div class="flex gap-4 flex-wrap">
                <Button id="save-network" class="grow basis-0 min-w-0">Backup</Button>
                <Button id="restore-network" class="grow basis-0 min-w-0">Restore</Button>
                <Button id="reset-network" class="grow basis-0 min-w-0">Reset</Button>
                <Button id="restart-network" class="grow basis-0 min-w-0">Next Round</Button>
                <Button id="evolve-network" class="grow basis-0 min-w-0">Evolve</Button>
            </div>
            <div class="grid">
                <label for="mutation-rate"
                    >Mutation Rate: <span id="mutation-rate-value"></span></label
                >
                <Range
                    id="mutation-rate"
                    type="range"
                    min="1"
                    max="100"
                    value="20"
                    step="1"
                    class="w-36"
                />
            </div>
            <div class="grid">
                <label for="number-of-cars"
                    >Number of Cars: <span id="number-of-cars-value"></span></label
                >
                <Range
                    id="number-of-cars"
                    type="range"
                    min="10"
                    max="100"
                    value="50"
                    step="10"
                    class="w-36"
                />
            </div>
            <div class="grid">
                <label for="number-of-cars">Neurons</label>
                <Input id="neurons" class="w-36" />
            </div>
        </nav>
        <div id="drive" class="h-full" {...otherProps} aria-live="polite"></div>
    </div>
</DefaultLayout>
