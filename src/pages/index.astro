---
import {
    ChevronsUpIcon,
    FolderIcon,
    SquareIcon,
    PlayIcon,
    RedoIcon,
    SaveIcon,
    TrashIcon,
} from '@lucide/astro'
import type { HTMLAttributes } from 'astro/types'
import { HTML_IDS } from 'src/constants'
import Button from '../components/button.astro'
import ControlBox from '../components/control-box.astro'
import InfoPanel from '../components/info-panel.astro'
import InfoText from '../components/info-text.astro'
import Input from '../components/input.astro'
import Radio from '../components/radio.astro'
import Range from '../components/range.astro'
import DefaultLayout from '../layouts/default-layout.astro'
import ScorePanel from '../components/score-panel.astro'

type Props = HTMLAttributes<'div'>
const { class: className, ...rest } = Astro.props
---

<script>
    import { createSimulation } from '../libs/self-driving-car'
    let simulation: { destroy: () => void } | null = null
    const boot = () => {
        const appContainer = document.querySelector('#app-container') as HTMLElement | null
        if (!appContainer) return
        simulation?.destroy?.()
        simulation = createSimulation(appContainer)
    }
    document.addEventListener('astro:page-load', boot)
    document.addEventListener('astro:before-swap', () => simulation?.destroy?.())
    window.addEventListener('pagehide', () => simulation?.destroy?.())
</script>

<DefaultLayout title="Self Driving Car">
    <div class="h-full flex flex-col grow">
        <menu class="flex gap-4 mb-2 w-full flex-wrap mt-2">
            <Button
                id={HTML_IDS.buttons.saveNetwork}
                class="flex-1 min-w-24"
                title="Make a backup of the active network"
                ><SaveIcon slot="icon" size={20} />Backup</Button
            >
            <Button
                id={HTML_IDS.buttons.restoreNetwork}
                class="flex-1 min-w-24"
                title="Restore the last saved network"
                ><FolderIcon slot="icon" size={20} />Restore</Button
            >
            <Button
                id={HTML_IDS.buttons.resetNetwork}
                class="flex-1 min-w-24"
                title="Delete the saved network"><TrashIcon slot="icon" size={20} />Reset</Button
            >
            <Button
                id={HTML_IDS.buttons.restartNetwork}
                class="flex-1 min-w-24"
                title="Restart the simulation without saving"
                ><RedoIcon slot="icon" size={20} />Restart</Button
            >
            <Button
                id={HTML_IDS.buttons.evolveNetwork}
                class="flex-1 min-w-24"
                title="Restart the simulation after saving the active network"
                ><ChevronsUpIcon slot="icon" size={20} />Evolve</Button
            >
        </menu>
        <menu class="flex gap-4 mb-2 flex-wrap mt-2">
            <ControlBox>
                <label for="app-mode" class="text-sm">Mode</label>
                <Radio
                    disabled
                    id={HTML_IDS.inputs.imitationModeRadio}
                    name="app-mode"
                    value="imitation"
                    checked={true}>Manual</Radio
                >
                <Radio id={HTML_IDS.inputs.geneticModeRadio} name="app-mode" value="genetic" checked
                    >Genetic</Radio
                >
            </ControlBox>
            <ControlBox>
                <label for={HTML_IDS.inputs.carsQuantityRange} class="text-sm"
                    >Number of Cars: <span id={HTML_IDS.inputs.carsQuantityValue}></span></label
                >
                <Range
                    id={HTML_IDS.inputs.carsQuantityRange}
                    type="range"
                    min="50"
                    max="500"
                    value="50"
                    step="10"
                    class="w-36"
                />
            </ControlBox>
            <ControlBox>
                <label for={HTML_IDS.inputs.mutationRateRange} class="text-sm"
                    >Max Mutation: <span id={HTML_IDS.inputs.mutationRateValue}></span></label
                >
                <Range
                    id={HTML_IDS.inputs.mutationRateRange}
                    type="range"
                    min="1"
                    max="100"
                    value="20"
                    step="1"
                    class="w-36"
                />
            </ControlBox>
            <ControlBox>
                <label for={HTML_IDS.inputs.networkArchitectureInput} class="text-sm"
                    >Deep Layers</label
                >
                <Input id={HTML_IDS.inputs.networkArchitectureInput} class="w-36" />
            </ControlBox>
        </menu>
        <div id={HTML_IDS.appContainer} class="h-full relative" aria-live="polite" {...rest}>
            <InfoPanel class="absolute top-0" }>
                <InfoText
                    id={HTML_IDS.info.networkId}
                    label="Current Car"
                    title="Identifier of the current active car"
                />
                <ScorePanel />
                <InfoText
                    id={HTML_IDS.info.record}
                    label="Record"
                    title="Highest score achieved by the current active car"
                />
                <InfoText
                    id={HTML_IDS.info.survivedRounds}
                    label="Survived Rounds"
                    title="Number of rounds this network has survived"
                />
                <InfoText
                    id={HTML_IDS.info.remainingCars}
                    label="Remaining Cars"
                    title="Number of cars still competing in current generation"
                />
                <InfoText
                    id={HTML_IDS.info.timeout}
                    label="Timeout"
                    title="Remaining time before game over"
                />
                <InfoText
                    id={HTML_IDS.info.pixelsPerSecond}
                    label="Pixels per sec."
                    title="Speed of the active car in pixels per second"
                />
                <InfoText
                    id={HTML_IDS.info.steeringDegree}
                    label="Direction"
                    title="Current steering direction of the active car"
                />
                <InfoText
                    id={HTML_IDS.info.fps}
                    label="Frame per sec."
                    title="Current frames per second of the simulation"
                />
            </InfoPanel>
        </div>
    </div>
</DefaultLayout>
